/*  Semaphore Photoresistor
  Horyeong Park, Nov 11, 2017
*/
#include <FreeRTOS_AVR.h>

#define LEDPIN 11
#define SENSORPIN A1

SemaphoreHandle_t sem;
int val = 0;

static void LEDTask(void *pvParameters) {
  for (;;) {
    xSemaphoreTake(sem, portMAX_DELAY);

    digitalWrite(LEDPIN, HIGH);
    Serial.println("LED  ON");

    vTaskDelay(100);
  }
}

static void InputLight(void *pvParameters) {
  for (;;)  {
    val = analogRead(SENSORPIN);

    if (val > 100)  {
      xSemaphoreGive(sem);
      vTaskDelay(100);
    } else  {
      Serial.println("LED OFF");
      digitalWrite(LEDPIN, LOW);
    }
    vTaskDelay(1);
  }
}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(LEDPIN, OUTPUT);

  // High Priority Task (LEDTask)
  xTaskCreate(LEDTask, NULL, configMINIMAL_STACK_SIZE, NULL, tskIDLE_PRIORITY + 2, NULL);

  // Low Priority Task (InputLight)
  xTaskCreate(InputLight, NULL, configMINIMAL_STACK_SIZE, NULL, tskIDLE_PRIORITY + 1, NULL);

  vSemaphoreCreateBinary(sem);

  vTaskStartScheduler();

  while (1);
}
void loop() {
  // put your main code here, to run repeatedly:
}
